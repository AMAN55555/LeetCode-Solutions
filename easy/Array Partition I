int partition(int *A,int low,int high)
{
    int i=low+1;
    int j=high;
    int pivot=A[low];
    int temp;
    
    do{
        while(i<high && A[i]<=pivot)
        {
            i++;
        }
        while(j>low && A[j]>pivot)
        {j--;}
        if(i<j)
        {
            temp=A[i];
            A[i]=A[j];
            A[j]=temp;
        }
    }while(i<j);
    
    temp=A[low];
    A[low]=A[j];
    A[j]=temp;
    
    return j;
}

void quicksort(int *A,int low,int high)
{
    int partitionindex;
    
    if(low<high)
    {
        partitionindex=partition(A,low,high);
        quicksort(A,low,partitionindex-1);
        quicksort(A,partitionindex+1,high);
    }
}
int arrayPairSum(int* nums, int numsSize){
    int sum=0;
    quicksort(nums,0,numsSize-1);
    
    for(int i=0;i<numsSize/2;i++)
    {
        sum=sum+*(nums+2*i);
    }
    
    return sum;

}
